{"ast":null,"code":"export var numberFormatting=function numberFormatting(number){var formattedNumber;if(number){formattedNumber=!isNaN(number)?number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g,','):number;}return formattedNumber;};","map":{"version":3,"sources":["/Users/monacook/Documents/GitHub/Covid.Tracker/src/helpers/number.js"],"names":["numberFormatting","number","formattedNumber","isNaN","toString","replace"],"mappings":"AAAA,MAAO,IAAMA,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,MAAD,CAAY,CAC1C,GAAIC,CAAAA,eAAJ,CACA,GAAID,MAAJ,CAAY,CACVC,eAAe,CAAG,CAACC,KAAK,CAACF,MAAD,CAAN,CACdA,MAAM,CAACG,QAAP,GAAkBC,OAAlB,CAA0B,uBAA1B,CAAmD,GAAnD,CADc,CAEdJ,MAFJ,CAGD,CACD,MAAOC,CAAAA,eAAP,CACD,CARM","sourcesContent":["export const numberFormatting = (number) => {\n  let formattedNumber;\n  if (number) {\n    formattedNumber = !isNaN(number)\n      ? number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n      : number;\n  }\n  return formattedNumber;\n};\n"]},"metadata":{},"sourceType":"module"}