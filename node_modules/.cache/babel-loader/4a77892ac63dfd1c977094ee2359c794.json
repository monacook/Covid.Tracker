{"ast":null,"code":"var _jsxFileName = \"/Users/monacook/Documents/GitHub/Covid.Tracker/src/components/App.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { Table, Thead, Tr, Th } from 'react-super-responsive-table';\nimport 'react-super-responsive-table/dist/SuperResponsiveTableStyle.css';\nimport Tables from '../components/table';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      error: null,\n      isLoaded: true,\n      countries: []\n    };\n  }\n\n  async getCountries() {\n    axios({\n      \"method\": \"GET\",\n      \"url\": \"https://covid-193.p.rapidapi.com/statistics\",\n      \"headers\": {\n        \"content-type\": \"application/octet-stream\",\n        \"x-rapidapi-host\": \"covid-193.p.rapidapi.com\",\n        \"x-rapidapi-key\": `${process.env.REACT_APP_API_KEY}`,\n        \"useQueryString\": true\n      }\n    }).then(response => {\n      this.setState({\n        countries: response.data.response,\n        isLoaded: false\n      });\n      console.log(this.state.countries);\n      console.log(this.state.isLoaded);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  componentDidMount() {\n    this.getCountries();\n  }\n\n  render() {\n    const {\n      countries\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"container\", {\n      className: \"ui center aligned header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, \"Covid-19 Tracker\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, \"Welcome to the Covid-19 Tracker. A simple and straight forward tracker that pulls the latest updates of recent cases around the world.\", /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, \"Boxes that are not filled in yet have not reported any new updates.\")), this.state.isLoaded || !countries ? /*#__PURE__*/React.createElement(\"p\", {\n      className: \"loading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }\n    }, \"Loading...\") : /*#__PURE__*/React.createElement(Table, {\n      className: \"ui single line table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Thead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Tr, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Th, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 23\n      }\n    }, \"Country\"), /*#__PURE__*/React.createElement(Th, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 23\n      }\n    }, \"New Cases\"), /*#__PURE__*/React.createElement(Th, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 23\n      }\n    }, \"Active\"), /*#__PURE__*/React.createElement(Th, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 23\n      }\n    }, \"Critical\"), /*#__PURE__*/React.createElement(Th, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 23\n      }\n    }, \"Recovered\"), /*#__PURE__*/React.createElement(Th, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 23\n      }\n    }, \"New Deaths\"), /*#__PURE__*/React.createElement(Th, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 23\n      }\n    }, \"Total Deaths\"), /*#__PURE__*/React.createElement(Th, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 23\n      }\n    }, \"Total Cases\"), /*#__PURE__*/React.createElement(Th, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 23\n      }\n    }, \"Total Tests\"), /*#__PURE__*/React.createElement(Th, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 23\n      }\n    }, \"Last Updated\"))), countries.map(country => {\n      return /*#__PURE__*/React.createElement(Tables, {\n        key: country.country,\n        name: country.country,\n        newCases: country.cases.new,\n        active: country.cases.active,\n        critical: country.cases.critical,\n        recovered: country.cases.recovered,\n        new: country.deaths.new,\n        deathTotal: country.deaths.total,\n        casesTotal: country.cases.total,\n        testTotal: country.tests.total,\n        lastUpdated: country.time,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }\n      });\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/monacook/Documents/GitHub/Covid.Tracker/src/components/App.js"],"names":["React","axios","Table","Thead","Tr","Th","Tables","App","Component","constructor","state","error","isLoaded","countries","getCountries","process","env","REACT_APP_API_KEY","then","response","setState","data","console","log","catch","componentDidMount","render","map","country","cases","new","active","critical","recovered","deaths","total","tests","time"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport { Table, Thead, Tr, Th } from 'react-super-responsive-table';\nimport 'react-super-responsive-table/dist/SuperResponsiveTableStyle.css';\nimport Tables from '../components/table';\nimport './App.css';\n\nclass App extends React.Component {\n   constructor(){\n    super();\n    this.state= {\n      error: null,\n      isLoaded: true,\n      countries: []\n    };\n  }  \n  \n async getCountries() {\n  axios({\n          \"method\":\"GET\",\n          \"url\":\"https://covid-193.p.rapidapi.com/statistics\",\n          \"headers\":{\n          \"content-type\":\"application/octet-stream\",\n          \"x-rapidapi-host\":\"covid-193.p.rapidapi.com\",\n          \"x-rapidapi-key\": `${process.env.REACT_APP_API_KEY}`,\n          \"useQueryString\": true\n          }\n          })\n          .then((response) => {\n            this.setState({ countries: response.data.response, isLoaded: false});\n            console.log(this.state.countries);\n            console.log(this.state.isLoaded); \n          })\n          .catch((error)=>{\n            console.log(error)\n          })\n }\n  componentDidMount() {\n      this.getCountries()\n      }\n    \n    render() {\n      const { countries } = this.state\n        return (\n          <container className=\"ui center aligned header\">\n            <h1>Covid-19 Tracker</h1>\n            <p>Welcome to the Covid-19 Tracker. A simple and straight forward tracker that pulls the latest updates of recent cases around the world. \n            <p>Boxes that are not filled in yet have not reported any new updates.</p></p>\n            {this.state.isLoaded || !countries ? (\n              <p className=\"loading\">Loading...</p>\n             ) : (\n            <Table className=\"ui single line table\"> \n              <Thead>\n                  <Tr>\n                      <Th>Country</Th>\n                      <Th>New Cases</Th>\n                      <Th>Active</Th> \n                      <Th>Critical</Th>\n                      <Th>Recovered</Th>\n                      <Th>New Deaths</Th>\n                      <Th>Total Deaths</Th>\n                      <Th>Total Cases</Th>\n                      <Th>Total Tests</Th>\n                      <Th>Last Updated</Th>\n                  </Tr>\n              </Thead>\n              {countries.map(country => {\n              return (\n                <Tables \n                  key={country.country}\n                  name={country.country}\n                  newCases={country.cases.new}\n                  active={country.cases.active}\n                  critical={country.cases.critical}\n                  recovered={country.cases.recovered}\n                  new={country.deaths.new}\n                  deathTotal={country.deaths.total}\n                  casesTotal={country.cases.total}\n                  testTotal={country.tests.total}\n                  lastUpdated={country.time}\n                />\n                )})}\n              </Table> \n              )}\n          </container>\n        )\n    }\n}\n        \n\nexport default App;"]},"metadata":{},"sourceType":"module"}