{"ast":null,"code":"export const numberFormatting = number => {\n  let formattedNumber;\n\n  if (number) {\n    formattedNumber = !isNaN(number) ? number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',') : number;\n  }\n\n  return formattedNumber;\n};","map":{"version":3,"sources":["/Users/monacook/Documents/GitHub/Covid.Tracker/src/helpers/number.js"],"names":["numberFormatting","number","formattedNumber","isNaN","toString","replace"],"mappings":"AAAA,OAAO,MAAMA,gBAAgB,GAAIC,MAAD,IAAY;AAC1C,MAAIC,eAAJ;;AACA,MAAID,MAAJ,EAAY;AACVC,IAAAA,eAAe,GAAG,CAACC,KAAK,CAACF,MAAD,CAAN,GACdA,MAAM,CAACG,QAAP,GAAkBC,OAAlB,CAA0B,uBAA1B,EAAmD,GAAnD,CADc,GAEdJ,MAFJ;AAGD;;AACD,SAAOC,eAAP;AACD,CARM","sourcesContent":["export const numberFormatting = (number) => {\n  let formattedNumber;\n  if (number) {\n    formattedNumber = !isNaN(number)\n      ? number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n      : number;\n  }\n  return formattedNumber;\n};\n"]},"metadata":{},"sourceType":"module"}